{
"endpoints":[
    {
        "name":"Account",
        "Synopsis":"<span><p>Account is a component of a Chart Of Accounts, and is part of a Ledger. Used to record a total monetary amount allocated against a specific use. Accounts are one of five basic types:</p><ul><li>Asset</li><li>Liability</li><li>Revenue (Income)</li><li>Expenses</li><li>Equity</li></ul><br/><h5>Business Rules</h5><p>The Account object has the following business rules and validations:</p><ul><li> The account name must be unique.</li><li> The account name cannot contain a colon (:).</li></ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type Account",
                "HTTPMethod":"POST",
                "URI":"/account/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Update",
                "Synopsis":"This operation Updates entity of the type Account",
                "HTTPMethod":"POST",
                "URI":"/account/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type Account",
                "HTTPMethod":"GET",
                "URI":"/account/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type Account searched using ID",
                "HTTPMethod":"GET",
                "URI":"/account/v2/:realmId/:accountId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "accountId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type Account using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/account/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"Bill",
        "Synopsis":"<span><p>Bill is an AP transaction representing a request-for-payment from a third party for goods/services rendered and/or received. Bill is a request for payment from the vendor for the goods or services that are rendered. You can enter a bill for your expenses or the items that you track as part of your business. An item is anything that your company buys, sells, or resells in the course of business. For example, products, shipping and handling charges, discounts, and sales tax. <br>An expense is the amount of money that you spend on the items that you want to buy. Expenses are linked to expense accounts. For example, if you pay $200 per month for utilities, you can set up an expense account for these utilities, and assign the bill to this account.</p><h5>Business Rules</h5><p>The Bill object has the following business rules and validations:</p><ul><li>If an account is provided in the header of the bill, it must be the Account Payable (AP) account. </li><li> A bill must have reference to a vendor in the header. </li><li> A bill must have at least one line that describes the item or account. </li><li> A bill must have reference to an object.</li></ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type Bill",
                "HTTPMethod":"POST",
                "URI":"/bill/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Update",
                "Synopsis":"This operation Updates entity of the type Bill",
                "HTTPMethod":"POST",
                "URI":"/bill/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type Bill",
                "HTTPMethod":"GET",
                "URI":"/bill/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type Bill searched using ID",
                "HTTPMethod":"GET",
                "URI":"/bill/v2/:realmId/:BillID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "BillID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type Bill using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/bill/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"BillPayment",
        "Synopsis":"<span><p>Financial transaction representing a Payment by check issued to pay one or more bills received from 3rd party (vendor) for purchased goods or services.</p><h5>Business Rules</h5><p>The BillPayment object has the following business rules and validations:</p><ul><li> If an account is provided in the header of the bill payment, it must be the Account Payable (AP) account.</li> <li> A bill payment must have reference to a vendor in the header.</li> <li> A bill payment must have reference to an object.</li></ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type BillPayment",
                "HTTPMethod":"POST",
                "URI":"/billpayment/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type BillPayment",
                "HTTPMethod":"GET",
                "URI":"/billpayment/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type BillPayment searched using ID",
                "HTTPMethod":"GET",
                "URI":"/billpayment/v2/:realmId/:BillPaymentID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "BillPaymentID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type BillPayment using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/billpayment/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"BillPaymentCreditCard",
        "Synopsis":"<span><p>Financial transaction representing a Payment by credit card issued to pay one or more bills received from 3rd party (vendor) for purchased goods or services. Creates a BillPaymentCreditCard transaction, representing a payment by credit card against a bill issued for goods or services. If using with QuickBooks desktop versions, if you want to pay multiple bills, you must issue a separate request for each bill you want to pay. Also, if you are using more than one A/P account, make sure that the APAccount used in the BillPaymentCreditCard matches the APAccount that was used when the Bill was originally added.</p></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type BillPaymentCreditCard",
                "HTTPMethod":"POST",
                "URI":"/billpaymentcreditcard/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type BillPaymentCreditCard",
                "HTTPMethod":"GET",
                "URI":"/billpaymentcreditcard/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type BillPaymentCreditCard searched using ID",
                "HTTPMethod":"GET",
                "URI":"/billpaymentcreditcard/v2/:realmId/:BillPaymentCreditCardID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "BillPaymentCreditCardID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type BillPaymentCreditCard using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/billpaymentcreditcard/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"BOMComponent",
        "Synopsis":"<span><p>Describes one component of the BOM (Bill of Materials), an Inventory Assembly Item.</p></span>",
        "methods":[
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type BOMComponent",
                "HTTPMethod":"GET",
                "URI":"/bomcomponent/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type BOMComponent searched using ID",
                "HTTPMethod":"GET",
                "URI":"/bomcomponent/v2/:realmId/:BomID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "BomID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type BOMComponent using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/bomcomponent/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"BuildAssembly",
        "Synopsis":"<span><p>Transaction that adds Assembly Items to inventory. The assembly's components (identified by Line/ItemId) are deducted from inventory and the quantity of assembly items (identified by Header/ItemId) is increased accordingly. Note that while the QBSDK returns QuantityOnHand data for the assembly and the components of the assembly, Data Services does NOT. Quantity on hand data can be obtained by looking only at the Item object itself.</p></span>",
        "methods":[
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type BuildAssembly",
                "HTTPMethod":"GET",
                "URI":"/buildassembly/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type BuildAssembly searched using ID",
                "HTTPMethod":"GET",
                "URI":"/buildassembly/v2/:realmId/:BuildAssemblyID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "BuildAssemblyID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type BuildAssembly using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/buildassembly/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"Charge",
        "Synopsis":"<span><p>Financial transaction representing a request for payment for goods or services that have been sold.</p></span>",
        "methods":[
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type Charge",
                "HTTPMethod":"GET",
                "URI":"/charge/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type Charge searched using ID",
                "HTTPMethod":"GET",
                "URI":"/charge/v2/:realmId/:ChargeID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "ChargeID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type Charge using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/charge/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"Check",
        "Synopsis":"<span><p>Financial transaction representing a payment to a payee. When used together with a realm synchronized with a QuickBooks company, the IDS Check object maps to the QuickBooks Check. Upon synchronization with QuickBooks, the Check Create operation results in a new Check added to the QuickBooks register. The Check Create operation creates a Check similar to what a user might create in the QuickBooks "Write Checks" form. The Write Checks form can be reached in the QuickBooks UI by selecting Banking-&gt;Write Checks or by clicking on the Write Checks icon in the Home page. <br>In the Check line items, you refer to an item via the ItemName field. That references automatically supplies the base unit of measure (UOM) for the item, and its description. You need only supply the quantity and unit price. At least one line item is required.</p><h5>Business Rules</h5><p>The Check object has the following business rules and validations:</p><ul> <li>A check must have at least one line that describes the item or account.</li> <li>A check must have reference to a vendor in the header.</li> </ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type Check",
                "HTTPMethod":"POST",
                "URI":"/check/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Update",
                "Synopsis":"This operation Updates entity of the type Check",
                "HTTPMethod":"POST",
                "URI":"/check/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type Check",
                "HTTPMethod":"GET",
                "URI":"/check/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type Check searched using ID",
                "HTTPMethod":"GET",
                "URI":"/check/v2/:realmId/:CheckID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "CheckID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type Check using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/check/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"Class",
        "Synopsis":"<span><p>Classes provide a way to track different segments of the business, and to break down the income and expenses for each segment. Classes provide a system for categorizing transactions that goes beyond the basic ways of assigning transactions to expense or income accounts. With classes, it is possible to categorize each detail line on a transaction. This allows the customer to write one check to the office supply store for things bought for two different business units and still track the business unit for those purchases.<br>Example uses of classes:</p><ul><li>Department</li><li>Enterprise</li><li>Properties</li><li>Work categories (plumbing, electrical, etc.)</li><li>Manufacturers</li><li>Partners</li><li>Product Lines</li></ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type Class",
                "HTTPMethod":"POST",
                "URI":"/class/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type Class",
                "HTTPMethod":"GET",
                "URI":"/class/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type Class searched using ID",
                "HTTPMethod":"GET",
                "URI":"/class/v2/:realmId/:ClassID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "ClassID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type Class using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/class/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },
    {
        "name":"Company",
        "Synopsis":"<span><p>A company represents the organization through which you offer services or products to the customers. The CompanyMetaData object contains your company information, such as the name, address, and web site address of your company. You must create a company file before you set up your financial records.</p></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type Company",
                "HTTPMethod":"POST",
                "URI":"/company/v2/create",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "text/xml"
                    },
                    {
                        "Name": "INTUITAUTH",
                        "Default": "intuit-app-token=\"Application Token assigned to Intuit App Center application\",intuit-token=\"Intuit login Ticket\""
                    },  
                    {
                        "Name": "Cookie",
                        "Default": "TICKET=<Intuit login Ticket>; qbn.ticket=<QBN Ticket>; qbn.tkt=<QBN tkt>; qbn.authid=<QBN Auth ID>; qbn.gauthid=<QBN G Auth ID>; qbn.agentid=<QBN Agent ID>; iamValidationTime=<time stamp>"
                    }
                ],
                "parameters":[
                ]
            },
            {
                "MethodName":"Update",
                "Synopsis":"This operation Updates entity of the type Company",
                "HTTPMethod":"POST",
                "URI":"/company/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "text/xml"
                    },
                    {
                        "Name": "INTUITAUTH",
                        "Default": "intuit-app-token=\"Application Token assigned to Intuit App Center application\",intuit-token=\"Intuit login Ticket\""
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve a company",
                "Synopsis":"This operation retrieve a company",
                "HTTPMethod":"GET",
                "URI":"/company/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve a List of Companies",
                "Synopsis":"<p>Company information may belong to the Intuit domain without belonging to the Data Services domain, because a company may have been created for an application without a Data Services association. The company/v2/availablelist API retrieves both the Data Services and non-Data Services companies that are associated with the user identity.&nbsp; To determine if a company is non-Data Services, check the following elements in the response:</p><ul> <li>DefinitionId: DoNotUse</li> <li>Name: RealmStatus</li> <li>Value: NonIDS</li></ul>",
                "HTTPMethod":"GET",
                "URI":"/company/v2/availablelist",
                "RequiresOAuth":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "text/xml"
                    },
                    {
                        "Name": "INTUITAUTH",
                        "Default": "intuit-app-token=\"Application Token assigned to Intuit App Center application\",intuit-token=\"Intuit login Ticket\""
                    },  
                    {
                        "Name": "Cookie",
                        "Default": "TICKET=<Intuit login Ticket>; qbn.ticket=<QBN Ticket>; qbn.tkt=<QBN tkt>; qbn.authid=<QBN Auth ID>; qbn.gauthid=<QBN G Auth ID>; qbn.agentid=<QBN Agent ID>; iamValidationTime=<time stamp>"
                    }
                ],
                "parameters":[
                    
                ]
            }            
        ]
    },
    {
        "name":"CreditCardCharge",
        "Synopsis":"<span><p>Financial transaction representing a charge for purchase of goods or services. The CreditCardCharge represents an expense to the business as a credit card charge transaction. The expense is of the following types: </p><ul><li> Item based expense for the item that is purchased for reselling. </li><li> Account based expense for the amount spend on an account, such as expense incurred on \"advertisement expense\" account.</li></ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type CreditCardCharge",
                "HTTPMethod":"POST",
                "URI":"/creditcardcharge/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Update",
                "Synopsis":"This operation Updates entity of the type CreditCardCharge",
                "HTTPMethod":"POST",
                "URI":"/creditcardcharge/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type CreditCardCharge",
                "HTTPMethod":"GET",
                "URI":"/creditcardcharge/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type CreditCardCharge searched using ID",
                "HTTPMethod":"GET",
                "URI":"/creditcardcharge/v2/:CreditCardChargeID",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "CreditCardChargeID",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type CreditCardCharge using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/creditcardcharge/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }
        ]
    },






























    {
        "name":"Customer",
        "Synopsis": "<span><p>A customer is a consumer of the service or product that your business offers. The Customer object allows you to categorize customers according to your business requirements. For example, you can create a category of customers to indicate the industry that a customer represents, the geographic location of a customer, or the awareness of the business. Categorization of customers is useful for reports. While creating a customer, avoid entering any job data. If you enter a job data, the system can prevent you from adding any more jobs for that customer. You must first create a customer, and then create a job using that customer as a parent.</p><p></p><h5>Business Rules</h5><p>The Customer object has the following business rules and validations:</p><ul><li>The customer name must be unique.</li><li>The customer name must not contain a colon (:).</li><li>The e-mail address of the customer must contain @ and . (dot).</li><li>The customer address field is mandatory.</li></ul></span>",
        "methods":[
            {
                "MethodName":"Create",
                "Synopsis":"This operation creates a new entity of the type Customer",
                "HTTPMethod":"POST",
                "URI":"/customer/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Update",
                "Synopsis":"This operation Updates entity of the type Customer",
                "HTTPMethod":"POST",
                "URI":"/customer/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve all",
                "Synopsis":"This operation retrieve all entities of type Customer",
                "HTTPMethod":"GET",
                "URI":"/customer/v2/:realmId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            },
            {
                "MethodName":"Retrieve by ID",
                "Synopsis":"This operation retrieve an entity of type Customer searched using ID",
                "HTTPMethod":"GET",
                "URI":"/customer/v2/:realmId/:accountId",
                "RequiresOAuth":"Y",
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "accountId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    },
                    {
                        "Name": "idDomain",
                        "Required": "Y",
                        "Default": "",
                        "Type": "enumerated",
                        "EnumeratedList": [
                            "NG",
                            "QB"
                        ]
                    }
                ]
            },
            {
                "MethodName":"Query Filter",
                "Synopsis":"This operation retrieves entites of type Customer using a Query Filter",
                "HTTPMethod":"POST",
                "URI":"/customer/v2/:realmId",
                "RequiresOAuth":"Y",
                "RequiresPostData":"Y",
                "headers":[
                    {
                        "Name": "content-type",
                        "Default": "application/xml"
                    }
                ],
                "parameters":[
                    {
                        "Name": "realmId",
                        "Required": "Y",
                        "Default": "",
                        "Type": "string"
                    }
                ]
            }

        ]
    }
 ]
}